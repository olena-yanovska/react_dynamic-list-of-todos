{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","memo","props","todos","selectedTodoId","onSelect","className","map","todo","id","completed","cn","title","type","onClick","TodoFilter","query","setQuery","searchBy","setSearchBy","onSubmit","event","preventDefault","value","onChange","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","closeTodoModal","useState","user","setUser","setIsUserLoading","useEffect","userId","catch","finally","href","email","name","App","setTodos","setSelectedTodoId","isTodoLoading","setIsTodoLoading","visibleTodos","useMemo","filter","normalizedTitle","toLowerCase","normalizedQuery","isTitleIncludesQuery","includes","selectedTodo","find","unselectUser","useCallback","todoId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d1611a8d.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  selectedTodoId: number;\n  onSelect: (todoId: number) => void;\n}\n\nexport const TodoList: React.FC<Props> = memo((props) => {\n  const {\n    todos,\n    selectedTodoId,\n    onSelect,\n  } = props;\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr data-cy=\"todo\" key={todo.id}>\n            <td className=\"is-vcentered\">{todo.id}</td>\n\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )\n              )}\n            </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn('', {\n                'has-text-success': todo.completed,\n                'has-text-danger': !todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onSelect(todo.id)}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={cn('far', {\n                      'fa-eye': selectedTodoId === 0,\n                      'fa-eye-slash': selectedTodoId === todo.id,\n                    })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n});\n","import React, { memo } from 'react';\n\ninterface Props {\n  query: string;\n  setQuery: (value: string) => void;\n  searchBy: string\n  setSearchBy: (value: string) => void;\n}\n\nexport const TodoFilter: React.FC<Props> = memo((props) => {\n  const {\n    query,\n    setQuery,\n    searchBy,\n    setSearchBy,\n  } = props;\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={(event) => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={searchBy}\n            onChange={(event) => setSearchBy(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n});\n","import React, { memo } from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = memo(() => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n));\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState, memo } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ninterface Props {\n  todo: Todo;\n  closeTodoModal: () => void;\n}\n\nexport const TodoModal: React.FC<Props> = memo(({ todo, closeTodoModal }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [, setIsUserLoading] = useState(false);\n\n  useEffect(() => {\n    setIsUserLoading(true);\n\n    getUser(todo.userId)\n      .then(setUser)\n      .catch(() => setUser(null))\n      .finally(() => setIsUserLoading(false));\n  }, [todo.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeTodoModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n});\n","import React, {\n  useState,\n  useEffect,\n  useMemo,\n  useCallback,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n  const [query, setQuery] = useState('');\n  const [searchBy, setSearchBy] = useState('all');\n  const [isTodoLoading, setIsTodoLoading] = useState(false);\n\n  useEffect(() => {\n    setIsTodoLoading(true);\n\n    getTodos()\n      .then(setTodos)\n      .catch(() => setTodos([]))\n      .finally(() => setIsTodoLoading(false));\n  }, []);\n\n  const selectTodoId = (todoId: number) => {\n    setSelectedTodoId(todoId);\n  };\n\n  const visibleTodos = useMemo(() => {\n    return todos.filter(todo => {\n      const normalizedTitle = todo.title.toLowerCase();\n      const normalizedQuery = query.toLowerCase();\n      const isTitleIncludesQuery = normalizedTitle.includes(normalizedQuery);\n\n      switch (searchBy) {\n        case 'completed':\n          return todo.completed && isTitleIncludesQuery;\n\n        case 'active':\n          return !todo.completed && isTitleIncludesQuery;\n\n        case 'all':\n          return isTitleIncludesQuery;\n\n        default:\n          return isTitleIncludesQuery;\n      }\n    });\n  }, [query, todos, searchBy]);\n\n  const selectedTodo = useMemo(() => {\n    return todos.find(\n      todo => todo.id === selectedTodoId,\n    );\n  }, [selectedTodoId, todos]);\n\n  const unselectUser = useCallback(() => {\n    setSelectedTodoId(0);\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                searchBy={searchBy}\n                setSearchBy={setSearchBy}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!isTodoLoading\n                ? (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodoId={selectedTodoId}\n                    onSelect={selectTodoId}\n                  />\n                )\n                : (<Loader />)}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          closeTodoModal={unselectUser}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}